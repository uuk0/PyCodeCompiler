{
  "type": "type",
  "name": "list",
  "generics": ["T"],
  "type variable": null,
  "attributes": [
    {
      "type": "subscription",
      "data type": "T | list[T]"
    },
    {
      "type": "operator",
      "operator": "+",
      "data type": "list[T]"
    },
    {
      "type": "operator",
      "operator": "+=",
      "data type": "list[T]"
    },
    {
      "type": "operator",
      "operator": "*",
      "data type": "list[T]"
    },
    {
      "type": "operator",
      "operator": "*=",
      "data type": "list[T]"
    },
    {
      "type": "operator",
      "operator": "in",
      "data type": "bool"
    },
    {
      "type": "attribute",
      "name": "sort",
      "data type": "Callable([], None, [('key=', typing.Callable[[T], typing.Any]), ('reverse=', bool)])"
    },
    {
      "type": "attribute",
      "name": "__len__",
      "data type": "int"
    },
    {
      "type": "attribute",
      "name": "__min__",
      "data type": "T"
    },
    {
      "type": "attribute",
      "name": "__max__",
      "data type": "T"
    },
    {
      "type": "attribute",
      "name": "index",
      "data type": "Callable([T], int, [('i=', int), ('j=', int)])"
    },
    {
      "type": "attribute",
      "name": "count",
      "data type": "typing.Callable[[T], int]"
    },
    {
      "type": "attribute",
      "name": "append",
      "data type": "typing.Callable[[T], None]"
    },
    {
      "type": "attribute",
      "name": "clear",
      "data type": "typing.Callable[[], None]"
    },
    {
      "type": "attribute",
      "name": "copy",
      "data type": "typing.Callable[[], list[T]]"
    },
    {
      "type": "attribute",
      "name": "extend",
      "data type": "typing.Callable[[list[T]], None]"
    },
    {
      "type": "attribute",
      "name": "insert",
      "data type": "typing.Callable[[int, T], None]"
    },
    {
      "type": "attribute",
      "name": "pop",
      "data type": "Callable([], T, [('i=', int)])"
    },
    {
      "type": "attribute",
      "name": "remove",
      "data type": "typing.Callable[[T], None]"
    },
    {
      "type": "attribute",
      "name": "reverse",
      "data type": "typing.Callable[[], None]"
    }
  ]
}